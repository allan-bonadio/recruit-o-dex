#!/bin/bash

echo "This starts up all the servers.  Checks so it won't start a second process."
# panama
#mongoconf=/usr/local/etc/mongod.conf

# old
#if [ ! -f "$mongoconf" ]
#then mongoconf=/opt/dvl/mongodb/mongod.conf
#	   # flores
#fi

# make sure I'm in the same dir as this script
cd `dirname $0`

# start mongo for rodex server to work
if ! pgrep -f mongod
then
	echo ":::::::::::::::::::::::::::::::::::: Starting up mongo DB server"

	# note both the port and mongod binary location changes
	if [ `hostname` == 'dnipro.local' ]
	then
		MONGODCMD="mongod --config /opt/homebrew/etc/mongod.conf --fork"
		export PORT=1100
	else
		MONGODCMD="/opt/dvl/mongo/startMongo.sh"
		export PORT=7700
	fi
	#MONGODCMD="mongod --config $mongoconf"
	echo mongo launch cmd: $MONGODCMD

	$MONGODCMD &
	sleep 20
else
	echo "mongod already running"
fi


# must start rodex server for react webapp to run
if ! pgrep -f rodexServer
then
	echo ":::::::::::::::::::::::::::::::::::: Starting up backend rodex server"
	./rodexServer.js &
	sleep 2
else
	echo "rodex server already running"
fi

#echo "Mongo DB and Rodex server running... ^C to kill, or..."
#read -p " Hit return if ready to start React-scripts > " ans

# now run react server
if ! pgrep -f recruit-o-dex/node_modules/react-scripts/script
then
	echo ":::::::::::::::::::::::::::::::::::: Starting up React Server"
	# pipe this through cat so it won't clear the screen all the time
	# don't try to run in bg (&) cuz it'll crash on kbd input
	EDITOR= TERM= node_modules/.bin/react-scripts --openssl-legacy-provider start | cat
	sleep 2
else
	echo "react server already running"
fi
echo "Servers Started!  Go surf to http://localhost:3300 or whatever"

